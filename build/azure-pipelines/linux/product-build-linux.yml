parameters:
  JOB_PREFIX: ''
  JOB_CONTAINER: ''
  VSCODE_ARCH: ''
  NPM_ARCH: ''

jobs:
  - job: ${{ parameters.JOB_PREFIX }}
    displayName: ${{ parameters.JOB_PREFIX }} (Compile)
    # condition: and(succeeded(), eq(variables['VSCODE_BUILD_LINUX'], 'true'))
    container: ${{ parameters.JOB_CONTAINER }}
    variables:
      VSCODE_ARCH: ${{ parameters.VSCODE_ARCH }}
      NPM_ARCH: ${{ parameters.NPM_ARCH }}
    steps:
      - template: product-compile-linux.yml

  - job: ${{ parameters.JOB_PREFIX }}BrowserTests
    displayName: ${{ parameters.JOB_PREFIX }} (Browser Test)
    dependsOn:
      - ${{ parameters.JOB_PREFIX }}
    # condition: and(succeeded(), eq(variables['VSCODE_BUILD_LINUX'], 'true'))
    container: ${{ parameters.JOB_CONTAINER }}
    variables:
      VSCODE_ARCH: ${{ parameters.VSCODE_ARCH }}
      NPM_ARCH: ${{ parameters.NPM_ARCH }}
    steps:
      - template: product-browser-tests-linux.yml

  - job: ${{ parameters.JOB_PREFIX }}ElectronTests
    displayName: ${{ parameters.JOB_PREFIX }} (Electron Test)
    dependsOn:
      - ${{ parameters.JOB_PREFIX }}
    # condition: and(succeeded(), eq(variables['VSCODE_BUILD_LINUX'], 'true'))
    container: ${{ parameters.JOB_CONTAINER }}
    variables:
      VSCODE_ARCH: ${{ parameters.VSCODE_ARCH }}
      NPM_ARCH: ${{ parameters.NPM_ARCH }}
    steps:
      - template: product-electron-tests-linux.yml

  - ${{ if notIn(variables['Build.Reason'], 'IndividualCI', 'BatchedCI') }}:
    - job: ${{ parameters.JOB_PREFIX }}CodeSign
      displayName: ${{ parameters.JOB_PREFIX }} (CodeSign)
      dependsOn:
        - ${{ parameters.JOB_PREFIX }}
      # condition: and(succeeded(), eq(variables['VSCODE_BUILD_LINUX'], 'true'), ne(variables['VSCODE_PUBLISH'], 'false'))
      container: ${{ parameters.JOB_CONTAINER }}
      variables:
        VSCODE_ARCH: ${{ parameters.VSCODE_ARCH }}
        NPM_ARCH: ${{ parameters.NPM_ARCH }}
      steps:
        - template: product-codesign-linux.yml
