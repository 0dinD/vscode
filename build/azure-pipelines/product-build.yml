pr: none

schedules:
  - cron: "0 5 * * Mon-Fri"
    displayName: Mon-Fri at 7:00
    branches:
      include:
        - master

variables:
  ${{ if and(eq(variables['VSCODE_PUBLISH'], ''), or(eq(variables['Build.Reason'], 'IndividualCI'), eq(variables['Build.Reason'], 'BatchedCI'))) }}:
    VSCODE_PUBLISH: "false"

resources:
  containers:
    - container: vscode-x64
      image: vscodehub.azurecr.io/vscode-linux-build-agent:bionic-x64
      endpoint: VSCodeHub
      options: --user 0:0
    - container: vscode-arm64
      image: vscodehub.azurecr.io/vscode-linux-build-agent:stretch-arm64
      endpoint: VSCodeHub
    - container: vscode-armhf
      image: vscodehub.azurecr.io/vscode-linux-build-agent:stretch-armhf
      endpoint: VSCodeHub
    - container: snapcraft
      image: snapcore/snapcraft:stable

stages:
  - stage: Compile
    jobs:
      - job: Compile
        pool:
          vmImage: "Ubuntu-20.04"
        variables:
          VSCODE_ARCH: x64
        steps:
          - template: product-compile.yml
      - job: Hygiene
        pool:
          vmImage: "Ubuntu-20.04"
        variables:
          VSCODE_ARCH: x64
        steps:
          - template: product-hygiene.yml

  - stage: Windows
    dependsOn:
      - Compile
    condition: and(succeeded(), eq(variables['VSCODE_COMPILE_ONLY'], 'false'))
    pool:
      vmImage: VS2017-Win2016
    jobs:
      - job: Windows
        condition: and(succeeded(), eq(variables['VSCODE_BUILD_WIN32'], 'true'))
        timeoutInMinutes: 90
        variables:
          VSCODE_ARCH: x64
        steps:
          - template: win32/product-build-win32.yml

      - ${{ if notIn(variables['Build.Reason'], 'IndividualCI', 'BatchedCI') }}:
        - job: Windows32
          condition: and(succeeded(), eq(variables['VSCODE_BUILD_WIN32_32BIT'], 'true'), ne(variables['VSCODE_PUBLISH'], 'false'))
          timeoutInMinutes: 90
          variables:
            VSCODE_ARCH: ia32
          steps:
            - template: win32/product-build-win32.yml

      - ${{ if notIn(variables['Build.Reason'], 'IndividualCI', 'BatchedCI') }}:
        - job: WindowsARM64
          condition: and(succeeded(), eq(variables['VSCODE_BUILD_WIN32_ARM64'], 'true'), ne(variables['VSCODE_PUBLISH'], 'false'))
          timeoutInMinutes: 90
          variables:
            VSCODE_ARCH: arm64
          steps:
            - template: win32/product-build-win32.yml

  - stage: Linux
    dependsOn:
      - Compile
    condition: and(succeeded(), eq(variables['VSCODE_COMPILE_ONLY'], 'false'))
    pool:
      vmImage: "Ubuntu-18.04"
    jobs:
      - template: linux/product-build-linux.yml
        parameters:
          JOB_PREFIX: Linux
          JOB_CONTAINER: vscode-x64
          NPM_ARCH: x64
          VSCODE_ARCH: x64
          VSCODE_BUILD: ${{ variables.VSCODE_BUILD_LINUX }}
          VSCODE_TEST: true

      - ${{ if notIn(variables['Build.Reason'], 'IndividualCI', 'BatchedCI') }}:
        - job: LinuxSnap
          dependsOn:
            - Linux
            - LinuxBrowserTests
            - LinuxElectronTests
          condition: and(succeeded(), eq(variables['VSCODE_BUILD_LINUX'], 'true'), ne(variables['VSCODE_PUBLISH'], 'false'))
          container: snapcraft
          variables:
            VSCODE_ARCH: x64
          steps:
            - template: linux/snap-build-linux.yml

      - ${{ if notIn(variables['Build.Reason'], 'IndividualCI', 'BatchedCI') }}:
        - template: linux/product-build-linux.yml
          parameters:
            JOB_PREFIX: LinuxArmhf
            JOB_CONTAINER: vscode-armhf
            NPM_ARCH: armv7l
            VSCODE_ARCH: armhf
            VSCODE_BUILD: ${{ variables.VSCODE_BUILD_LINUX_ARMHF }}
            VSCODE_TEST: false

      - ${{ if notIn(variables['Build.Reason'], 'IndividualCI', 'BatchedCI') }}:
        - job: LinuxSnapArmhf
          dependsOn:
            - LinuxArmhf
            - LinuxArmhfBrowserTests
            - LinuxArmhfElectronTests
          condition: and(succeeded(), eq(variables['VSCODE_BUILD_LINUX_ARMHF'], 'true'))
          container: snapcraft
          variables:
            VSCODE_ARCH: armhf
          steps:
            - template: linux/snap-build-linux.yml

      - ${{ if notIn(variables['Build.Reason'], 'IndividualCI', 'BatchedCI') }}:
        - template: linux/product-build-linux.yml
          parameters:
            JOB_PREFIX: LinuxArm64
            JOB_CONTAINER: vscode-arm64
            NPM_ARCH: arm64
            VSCODE_ARCH: arm64
            VSCODE_BUILD: ${{ variables.VSCODE_BUILD_LINUX_ARMHF }}
            VSCODE_TEST: false

      - ${{ if notIn(variables['Build.Reason'], 'IndividualCI', 'BatchedCI') }}:
        - job: LinuxSnapArm64
          dependsOn:
            - LinuxArm64
            - LinuxArm64BrowserTests
            - LinuxArm64ElectronTests
          condition: and(succeeded(), eq(variables['VSCODE_BUILD_LINUX_ARM64'], 'true'), ne(variables['VSCODE_PUBLISH'], 'false'))
          container: snapcraft
          variables:
            VSCODE_ARCH: arm64
          steps:
            - template: linux/snap-build-linux.yml

      - ${{ if notIn(variables['Build.Reason'], 'IndividualCI', 'BatchedCI') }}:
        - job: LinuxAlpine
          condition: and(succeeded(), eq(variables['VSCODE_BUILD_LINUX_ALPINE'], 'true'), ne(variables['VSCODE_PUBLISH'], 'false'))
          steps:
            - template: linux/product-build-alpine.yml

      - ${{ if notIn(variables['Build.Reason'], 'IndividualCI', 'BatchedCI') }}:
        - job: LinuxWeb
          condition: and(succeeded(), eq(variables['VSCODE_BUILD_WEB'], 'true'), ne(variables['VSCODE_PUBLISH'], 'false'))
          variables:
            VSCODE_ARCH: x64
          steps:
            - template: web/product-build-web.yml

  - stage: macOS
    dependsOn:
      - Compile
    condition: and(succeeded(), eq(variables['VSCODE_COMPILE_ONLY'], 'false'))
    pool:
      vmImage: macOS-latest
    jobs:
      - template: darwin/product-build-darwin.yml
        parameters:
          JOB_PREFIX: macOS
          VSCODE_ARCH: x64
          VSCODE_BUILD: ${{ variables.VSCODE_BUILD_MACOS }}

      - ${{ if notIn(variables['Build.Reason'], 'IndividualCI', 'BatchedCI') }}:
        - template: darwin/product-build-darwin.yml
          parameters:
            JOB_PREFIX: macOSARM64
            VSCODE_ARCH: arm64
            VSCODE_BUILD: ${{ variables.VSCODE_BUILD_MACOS_ARM64 }}

  - ${{ if notIn(variables['Build.Reason'], 'IndividualCI', 'BatchedCI') }}:
    - stage: Publish
      dependsOn:
        - Windows
        - Linux
        - macOS
      condition: and(succeededOrFailed(), eq(variables['VSCODE_COMPILE_ONLY'], 'false'), ne(variables['VSCODE_PUBLISH'], 'false'))
      pool:
        vmImage: "Ubuntu-18.04"
      jobs:
        - job: SyncMooncake
          displayName: Sync Mooncake
          steps:
            - template: sync-mooncake.yml
        - job: ReleaseBuild
          condition: and(succeeded(), or(eq(variables['VSCODE_RELEASE'], 'true'), and(or(eq(variables['VSCODE_QUALITY'], 'insider'), eq(variables['VSCODE_QUALITY'], 'exploration')), eq(variables['Build.Reason'], 'Schedule'))))
          displayName: Release Build
          steps:
            - template: release.yml
